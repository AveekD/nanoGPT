This course covers several fundamental concepts in programming, including basic principles such as procedural and data abstraction, resource management, and basic data structures.
Eggs serve several functions in a cake, including providing structure, influencing the texture and smoothness, providing moisture, and contributing to the taste of the cake.
1 egg: The cake was dense and compact, but held together when cut and had a pleasant taste.We will use C++ as our vehicle for learning these concepts, and we will implement several large programming projects to develop our experience and understanding of the concepts.
Consider a basic machine model where memory is represented as a big array, with each index in the array corresponding to a memory location that can hold a value, as shown in Figure 1.
(Later, we will see that a program uses a more systematic method for locating the local variables of a function.) The contents of memory illustrated above areWhen the program proceeds to initialize z, it copies the value 3 from the memory for x into the memory for z, as demonstrated in Figure 2.
Figure 3 Modifying the value of an object.
There are three options that we will see in C++: static: the lifetime is essentially the whole program automatic (also called local): the lifetime is tied to a particular scope, such as a block of code dynamic: the object is explicitly created and destroyed by the programmer The former two durations are controlled by the compiler, while the latter is specified by the programmer.Consider the following program: The assignment in the last line copies the value stored in the memory object associated with y into the memory object for x, as shown in Figure 4.
The following is an example with a local variable: The declaration int &y = x; introduces y as a new name for the object associated with x.
Since C++ only supports reference semantics in initialization, the association between a variable and a memory object can never be broken, except when the variable goes out of scope.
